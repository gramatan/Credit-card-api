components:
  schemas:
    BalanceLogModel:
      description: Класс для логов баланса.
      properties:
        after:
          title: After
          type: string
        before:
          title: Before
          type: string
        card_number:
          title: Card Number
          type: string
        changes:
          title: Changes
          type: string
        datetime_utc:
          format: date-time
          title: Datetime Utc
          type: string
      required:
      - card_number
      - before
      - after
      - changes
      - datetime_utc
      title: BalanceLogModel
      type: object
    Body_login_for_access_token_api_auth_post:
      properties:
        client_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Secret
        grant_type:
          anyOf:
          - pattern: password
            type: string
          - type: 'null'
          title: Grant Type
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_login_for_access_token_api_auth_post
      type: object
    Body_verify_api_verify_post:
      properties:
        document:
          format: binary
          title: Document
          type: string
        selfie:
          format: binary
          title: Selfie
          type: string
      required:
      - selfie
      - document
      title: Body_verify_api_verify_post
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    TokenData:
      description: Token data schema.
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - access_token
      - token_type
      title: TokenData
      type: object
    TransactionRequest:
      description: Схема для транзакций.
      properties:
        balance:
          title: Balance
          type: string
        card_number:
          title: Card Number
          type: string
      required:
      - card_number
      - balance
      title: TransactionRequest
      type: object
    UserBalanceRequest:
      description: Balance response schema.
      properties:
        balance:
          title: Balance
          type: string
        card_number:
          title: Card Number
          type: string
      required:
      - card_number
      - balance
      title: UserBalanceRequest
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    VerificationRequest:
      description: Схема для результата верификации.
      properties:
        verified:
          title: Verified
          type: boolean
      required:
      - verified
      title: VerificationRequest
      type: object
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: api/auth
      type: oauth2
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /api/auth:
    post:
      description: "Получение токена.\n\nArgs:\n    form_data (OAuth2PasswordRequestForm):\
        \ Данные формы.\n    response (TokenService): Сервис для работы с токенами.\n\
        \nReturns:\n    TokenData: Токен."
      operationId: login_for_access_token_api_auth_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_api_auth_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login For Access Token
      tags:
      - auth
  /api/balance:
    get:
      description: "Получение баланса.\n\nArgs:\n    card_number (str): Номер карты.\n\
        \    token (str): Токен.\n\nRaises:\n    HTTPException: Если ответ от сервиса\
        \ не 200.\n\nReturns:\n    UserBalanceRequest: Баланс."
      operationId: read_balance_api_balance_get
      parameters:
      - in: query
        name: card_number
        required: true
        schema:
          title: Card Number
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalanceRequest'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Read Balance
      tags:
      - balance
  /api/balance/history:
    get:
      description: "Получение истории баланса.\n\nArgs:\n    card_number (str): Номер\
        \ карты.\n    from_date (datetime): Дата начала.\n    to_date (datetime):\
        \ Дата конца.\n    token (str): Токен.\n\nRaises:\n    HTTPException: Если\
        \ ответ от сервиса не 200.\n\nReturns:\n    list[BalanceLogModel]: История\
        \ баланса."
      operationId: read_balance_history_api_balance_history_get
      parameters:
      - in: query
        name: card_number
        required: true
        schema:
          title: Card Number
          type: string
      - in: query
        name: from_date
        required: true
        schema:
          format: date-time
          title: From Date
          type: string
      - in: query
        name: to_date
        required: true
        schema:
          format: date-time
          title: To Date
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BalanceLogModel'
                title: Response Read Balance History Api Balance History Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Read Balance History
      tags:
      - balance
  /api/deposit:
    post:
      description: "Эндпоинт для пополнения карты.\n\nArgs:\n    card_number (str):\
        \ Номер карты.\n    amount (Decimal): Сумма.\n    token (str): Токен.\n\n\
        Raises:\n    HTTPException: Если не получили ответ 200.\n\nReturns:\n    TransactionRequest:\
        \ Новый баланс."
      operationId: deposit_api_deposit_post
      parameters:
      - in: query
        name: card_number
        required: true
        schema:
          title: Card Number
          type: string
      - in: query
        name: amount
        required: true
        schema:
          anyOf:
          - type: number
          - type: string
          title: Amount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRequest'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Deposit
      tags:
      - transactions
  /api/verify:
    post:
      description: "Эндпоинт для верификации пользователя.\n\nArgs:\n    card_number\
        \ (str): Номер карты.\n    request (Request): Сам запрос для состояний.\n\
        \    selfie (UploadFile): Селфи пользователя.\n    document (UploadFile):\
        \ Документ пользователя.\n    token (str): Токен.\n\nReturns:\n    VerificationRequest:\
        \ Результат верификации."
      operationId: verify_api_verify_post
      parameters:
      - in: query
        name: card_number
        required: true
        schema:
          title: Card Number
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_verify_api_verify_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationRequest'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Verify
      tags:
      - verification
  /api/withdrawal:
    post:
      description: "Эндпоинт для снятия денег с карты.\n\nArgs:\n    card_number (str):\
        \ Номер карты.\n    amount (Decimal): Сумма.\n    token (str): Токен.\n\n\
        Raises:\n    HTTPException: Если не получили ответ 200.\n\nReturns:\n    TransactionRequest:\
        \ Новый баланс."
      operationId: withdrawal_api_withdrawal_post
      parameters:
      - in: query
        name: card_number
        required: true
        schema:
          title: Card Number
          type: string
      - in: query
        name: amount
        required: true
        schema:
          anyOf:
          - type: number
          - type: string
          title: Amount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRequest'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Withdrawal
      tags:
      - transactions
